name: Build, Scan, and Deploy NGINX

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/nginx:latest .
          docker tag ${{ secrets.DOCKER_USERNAME }}/nginx:latest ${{ secrets.DOCKER_USERNAME }}/nginx:${{ github.sha }}

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/nginx:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/nginx:${{ github.sha }}

  sonarqube_analysis:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up SonarQube Scanner
        uses: sonarsource/sonarcloud-github-action@v2
        with:
          organization: ${{ secrets.SONAR_ORG }}
          token: ${{ secrets.SONAR_TOKEN }}

      - name: Run SonarQube Analysis
        run: |
          sonar-scanner \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
            -Dsonar.organization=${{ secrets.SONAR_ORG }} \
            -Dsonar.host.url=${SONAR_URL}

  trivy_scan:
    runs-on: ubuntu-latest
    needs: sonarqube_analysis
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y trivy

      - name: Run Trivy Scan
        run: |
          trivy image --security-checks vuln ${{ secrets.DOCKER_USERNAME }}/nginx:latest

  deploy:
    runs-on: ubuntu-latest
    needs: trivy_scan
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl rollout status deployment/nginx-deployment
